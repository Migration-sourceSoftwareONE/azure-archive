name: Deploy Terraform Storage

on:
  workflow_dispatch:

permissions:
  contents: write
  actions: write
  id-token: write

jobs:
  terraform:
    environment: production
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # No azure/login step needed for backend authentication via Service Principal env vars

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init (with backend Service Principal)
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var "subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}" \
            -var "tenant_id=${{ secrets.ARM_TENANT_ID }}"
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Get Terraform Outputs
        id: tfoutputs
        run: |
          echo "account_name=$(terraform output -raw storage_account_name)" >> $GITHUB_OUTPUT
          echo "container_name=$(terraform output -raw container_name)" >> $GITHUB_OUTPUT
          echo "storage_key=$(terraform output -raw storage_account_primary_key)" >> $GITHUB_OUTPUT

      - name: Create Token
        id: create_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.ARCHIVE_APP_ID }}
          private_key: ${{ secrets.ARCHIVE_APP_PRIVATE_KEY }}

      - name: Set repo secret AZURE_STORAGE_ACCOUNT
        run: gh secret set AZURE_STORAGE_ACCOUNT --body "${{ steps.tfoutputs.outputs.account_name }}"
        env:
          GH_TOKEN: ${{ steps.create_token.outputs.token }}

      - name: Set repo variable CONTAINER_NAME
        run: gh variable set CONTAINER_NAME --body "${{ steps.tfoutputs.outputs.container_name }}"
        env:
          GH_TOKEN: ${{ steps.create_token.outputs.token }}

      - name: Set repo secret AZURE_STORAGE_KEY
        run: gh secret set AZURE_STORAGE_KEY --body "${{ steps.tfoutputs.outputs.storage_key }}"
        env:
          GH_TOKEN: ${{ steps.create_token.outputs.token }}
